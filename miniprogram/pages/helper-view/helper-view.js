"use strict";var tfjs=require("../../chunks/tfjs.js");var wasm=require("../../chunks/wasm.js");class FrameAdapter{constructor(maxProcessFrame=Number.MAX_SAFE_INTEGER,frameGap=30){this.frameNum=0;this.processFrameNum=0;this.currGap=0;this.lastFrameDone=true;this.frameGap=frameGap;this.maxProcessFrame=maxProcessFrame}onProcessFrame(cb){this.frameProcesser=cb}onMaxFrame(cb){this.maxFrameCB=cb}reset(){this.currGap=0;this.frameNum=0;this.processFrameNum=0}async triggerFrame(frame){var _a;if(this.frameProcesser&&this.processFrameNum<this.maxProcessFrame&&this.lastFrameDone){if(this.frameNum===0||this.lastProcessTime===void 0){await this.processFrame(frame)}else{const gap=Math.max(Math.round(this.lastProcessTime/this.frameGap),1);this.currGap=gap;if(this.frameNum>=gap){await this.processFrame(frame);this.frameNum=0}}this.frameNum++}if(this.processFrameNum===this.maxProcessFrame){this.processFrameNum++;(_a=this.maxFrameCB)==null?void 0:_a.call(this)}}async processFrame(frame){if(this.frameProcesser){this.lastFrameDone=false;const t=Date.now();await this.frameProcesser(frame);this.lastFrameDone=true;this.lastProcessTime=Date.now()-t}this.processFrameNum++}}function getNode(id,ctx){return new Promise((resolve=>{wx.createSelectorQuery().in(ctx).select(id).fields({node:true,rect:true}).exec(resolve)}))}function atob(data){data=`${data}`;data=data.replace(/[ \t\n\f\r]/g,"");if(data.length%4===0){data=data.replace(/==?$/,"")}if(data.length%4===1||/[^+/0-9A-Za-z]/.test(data)){return null}let output="";let buffer=0;let accumulatedBits=0;for(let i=0;i<data.length;i++){buffer<<=6;buffer|=atobLookup(data[i]);accumulatedBits+=6;if(accumulatedBits===24){output+=String.fromCharCode((buffer&16711680)>>16);output+=String.fromCharCode((buffer&65280)>>8);output+=String.fromCharCode(buffer&255);buffer=accumulatedBits=0}}if(accumulatedBits===12){buffer>>=4;output+=String.fromCharCode(buffer)}else if(accumulatedBits===18){buffer>>=2;output+=String.fromCharCode((buffer&65280)>>8);output+=String.fromCharCode(buffer&255)}return output}const keystr$1="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";function atobLookup(chr){const index=keystr$1.indexOf(chr);return index<0?undefined:index}var atob_1=atob;function btoa(s){let i;s=`${s}`;for(i=0;i<s.length;i++){if(s.charCodeAt(i)>255){return null}}let out="";for(i=0;i<s.length;i+=3){const groupsOfSix=[undefined,undefined,undefined,undefined];groupsOfSix[0]=s.charCodeAt(i)>>2;groupsOfSix[1]=(s.charCodeAt(i)&3)<<4;if(s.length>i+1){groupsOfSix[1]|=s.charCodeAt(i+1)>>4;groupsOfSix[2]=(s.charCodeAt(i+1)&15)<<2}if(s.length>i+2){groupsOfSix[2]|=s.charCodeAt(i+2)>>6;groupsOfSix[3]=s.charCodeAt(i+2)&63}for(let j=0;j<groupsOfSix.length;j++){if(typeof groupsOfSix[j]==="undefined"){out+="="}else{out+=btoaLookup(groupsOfSix[j])}}}return out}const keystr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";function btoaLookup(index){if(index>=0&&index<64){return keystr[index]}return undefined}var btoa_1=btoa;var abab={atob:atob_1,btoa:btoa_1};var utf8Encodings=["utf8","utf-8","unicode-1-1-utf-8"];function TextEncoder(encoding){if(utf8Encodings.indexOf(encoding)<0&&typeof encoding!=="undefined"&&encoding!=null){throw new RangeError("Invalid encoding type. Only utf-8 is supported")}else{this.encoding="utf-8";this.encode=function(str){if(typeof str!=="string"){throw new TypeError("passed argument must be of tye string")}var binstr=unescape(encodeURIComponent(str)),arr=new Uint8Array(binstr.length);const split=binstr.split("");for(let i=0;i<split.length;i++){arr[i]=split[i].charCodeAt(0)}return arr}}}function TextDecoder(encoding){if(utf8Encodings.indexOf(encoding)<0&&typeof encoding!=="undefined"&&encoding!=null){throw new RangeError("Invalid encoding type. Only utf-8 is supported")}else{this.encoding="utf-8";this.decode=function(view,options){if(typeof view==="undefined"){return""}var stream=typeof options!=="undefined"&&stream in options?options.stream:false;if(typeof stream!=="boolean"){throw new TypeError("stream option must be boolean")}if(!ArrayBuffer.isView(view)){throw new TypeError("passed argument must be an array buffer view")}else{var arr=new Uint8Array(view.buffer,view.byteOffset,view.byteLength),charArr=new Array(arr.length);for(let i=0;i<arr.length;i++){charArr[i]=String.fromCharCode(arr[i])}return decodeURIComponent(escape(charArr.join("")))}}}}var textEncoder={TextEncoder:TextEncoder,TextDecoder:TextDecoder};let systemFetchFunc;class PlatformWeChat{constructor(fetchFunc){systemFetchFunc=fetchFunc}fetch(path,requestInits){return systemFetchFunc(path,requestInits)}now(){return Date.now()}encode(text,encoding){if(encoding!=="utf-8"&&encoding!=="utf8"){throw new Error(`Browser's encoder only supports utf-8, but got ${encoding}`)}return new textEncoder.TextEncoder(encoding).encode(text)}decode(bytes,encoding){return new textEncoder.TextDecoder(encoding).decode(bytes)}}const WECHAT_WEBGL_BACKEND_NAME="wechat-webgl";function setupWechatPlatform(config,debug=false){const tf=config.tf;const backendName=config.backendName||WECHAT_WEBGL_BACKEND_NAME;if(debug){console.log(tf)}if(tf.getBackend()===backendName){return}const webgl=config.webgl;tf.ENV.setPlatform("wechat",new PlatformWeChat(config.fetchFunc));setBase64Methods(tf);if(config.webgl&&config.canvas){initWebGL(tf,webgl,config.canvas,backendName,debug)}else{console.log("webgl backend is not initialized, please inject webgl backend and the offscreen canvas.")}}function setBase64Methods(tf){tf.ENV.global.btoa=abab.btoa;tf.ENV.global.atob=abab.atob}const BACKEND_PRIORITY=2;function initWebGL(tf,webgl,canvas,backendName=WECHAT_WEBGL_BACKEND_NAME,debug=false){if(tf.findBackend(backendName)==null){const WEBGL_ATTRIBUTES={alpha:false,antialias:false,premultipliedAlpha:false,preserveDrawingBuffer:false,depth:false,stencil:false,failIfMajorPerformanceCaveat:true};const gl=canvas.getContext("webgl",WEBGL_ATTRIBUTES);if(debug){console.log("start backend registration")}webgl.setWebGLContext(1,gl);try{tf.registerBackend(backendName,(()=>{const context=new webgl.GPGPUContext(gl);return new webgl.MathBackendWebGL(context)}),BACKEND_PRIORITY);const kernels=tf.getKernelsForBackend("webgl");kernels.forEach((kernelConfig=>{const newKernelConfig=Object.assign({},kernelConfig,{backendName:backendName});tf.registerKernel(newKernelConfig)}))}catch(e){throw new Error(`Failed to register Webgl backend: ${e.message}`)}}tf.setBackend(backendName);if(debug){console.log("current backend = ",tf.getBackend())}}const TEXT_FILE_EXTS=/\.(txt|json|html|txt|csv)/;function parseResponse(url,res){let header=res.header||{};header=Object.keys(header).reduce(((map,key)=>{map[key.toLowerCase()]=header[key];return map}),{});return{ok:(res.statusCode/200|0)===1,status:res.statusCode,statusText:res.statusCode,url:url,clone:()=>parseResponse(url,res),text:()=>Promise.resolve(typeof res.data==="string"?res.data:JSON.stringify(res.data)),json:()=>{if(typeof res.data==="object")return Promise.resolve(res.data);let json={};try{json=JSON.parse(res.data)}catch(err){console.error(err)}return Promise.resolve(json)},arrayBuffer:()=>Promise.resolve(res.data),headers:{keys:()=>Object.keys(header),entries:()=>{const all=[];for(const key in header){if(header.hasOwnProperty(key)){all.push([key,header[key]])}}return all},get:n=>header[n.toLowerCase()],has:n=>n.toLowerCase()in header}}}function fetchFunc(url,options){options=options||{};const dataType=url.match(TEXT_FILE_EXTS)?"text":"arraybuffer";return new Promise(((resolve,reject)=>{wx.request({url:url,method:options.method||"GET",data:options.body,header:options.headers,dataType:dataType,responseType:dataType,success:resp=>resolve(parseResponse(url,resp)),fail:err=>reject(err)})}))}const{platform:platform}=wx.getSystemInfoSync();const isAndroid=platform==="android";wasm.setWasmPaths({"tfjs-backend-wasm.wasm":"/tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm":"/tfjs-backend-wasm.wasm","tfjs-backend-wasm-threaded-simd.wasm":"/tfjs-backend-wasm.wasm"},true);setupWechatPlatform({fetchFunc:fetchFunc,tf:tfjs.tf,webgl:tfjs.webgl,canvas:wx.createOffscreenCanvas()});let deps;let userFrameCallback;Component({properties:{cameraPosition:{type:String,value:"front"}},data:{FPS:"0",backend:"",usingCamera:false},behaviors:["wx://component-export"],export(){return{set(cfg){userFrameCallback=cfg.onFrame},drawCanvas2D(frame){if(deps){const{ctx:ctx,canvas2D:canvas2D}=deps;ctx.clearRect(0,0,canvas2D.width,canvas2D.height);canvas2D.width=frame.width;canvas2D.height=frame.height;const imageData=canvas2D.createImageData(new Uint8Array(frame.data),frame.width,frame.height);ctx.putImageData(imageData,0,0)}},start(){},stop(){}}},async ready(){console.log("helper view ready");this.setData({backend:tfjs.getBackend()});const[{node:canvasGL}]=await getNode("#gl",this);const[{node:canvas2D}]=await getNode("#canvas",this);const[{node:canvasInput}]=await getNode("#canvas-input",this);console.log("helper view get canvas node");const ctx=canvas2D.getContext("2d");const inputCtx=canvasInput.getContext("2d");const cameraCtx=wx.createCameraContext();const frameAdapter=new FrameAdapter;const cameraListener=cameraCtx.onCameraFrame(frameAdapter.triggerFrame.bind(frameAdapter));frameAdapter.onProcessFrame((async frame=>{if(userFrameCallback){const t=Date.now();userFrameCallback(frame,deps);if(isAndroid)await new Promise((resolve=>canvas2D.requestAnimationFrame(resolve)));this.setData({FPS:(1e3/(Date.now()-t)).toFixed(2)})}}));deps={ctx:ctx,inputCtx:inputCtx,canvasGL:canvasGL,canvas2D:canvas2D,canvasInput:canvasInput,cameraCtx:cameraCtx,frameAdapter:frameAdapter,cameraListener:cameraListener};this.triggerEvent("inited");console.log("helper view inited")},detached(){deps==null?void 0:deps.cameraListener.stop();deps=null;userFrameCallback=null},methods:{onBtnUseCameraClick(){if(!deps)return;if(this.data.usingCamera){this.setData({usingCamera:false});deps.cameraListener.stop()}else{this.setData({usingCamera:true});deps.cameraListener.start()}},onBtnSelectClick(){if(!deps)return;wx.chooseImage({count:1,success:res=>{const imgPath=res.tempFilePaths[0];Promise.all([new Promise((resolve=>{wx.getImageInfo({src:imgPath,success:resolve})})),new Promise((resolve=>{const img=deps.canvasInput.createImage();img.onload=()=>resolve(img);img.src=imgPath}))]).then((([{width:width,height:height},img])=>{deps.canvasInput.width=width;deps.canvasInput.height=height;deps.inputCtx.drawImage(img,0,0);const imgData=deps.inputCtx.getImageData(0,0,width,height);userFrameCallback==null?void 0:userFrameCallback(imgData,deps)}))}})}}});
